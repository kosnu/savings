# Created by https://www.toptal.com/developers/gitignore/api/node
# Edit at https://www.toptal.com/developers/gitignore?templates=node

### Node ###
# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*
.pnpm-debug.log*

# Diagnostic reports (https://nodejs.org/api/report.html)
report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage
*.lcov

# nyc test coverage
.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release

# Dependency directories
node_modules/
jspm_packages/

# Snowpack dependency directory (https://snowpack.dev/)
web_modules/

# TypeScript cache
*.tsbuildinfo

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional stylelint cache
.stylelintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variable files
.env
.env.development.local
.env.test.local
.env.production.local
.env.local

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# Next.js build output
.next
out

# Nuxt.js build / generate output
.nuxt
dist

# Gatsby files
.cache/
# Comment in the public line in if your project uses Gatsby and not Next.js
# https://nextjs.org/blog/next-9-1#public-directory-support
# public

# vuepress build output
.vuepress/dist

# vuepress v2.x temp and cache directory
.temp

# Docusaurus cache and generated files
.docusaurus

# Serverless directories
.serverless/

# FuseBox cache
.fusebox/

# DynamoDB Local files
.dynamodb/

# TernJS port file
.tern-port

# Stores VSCode versions used for testing VSCode extensions
.vscode-test

# yarn v2
.yarn/cache
.yarn/unplugged
.yarn/build-state.yml
.yarn/install-state.gz
.pnp.*

### Node Patch ###
# Serverless Webpack directories
.webpack/

# Optional stylelint cache

# SvelteKit build / generate output
.svelte-kit

# End of https://www.toptal.com/developers/gitignore/api/node

.DS_Store

### VS Code ###
# 1. すべての.vscodeディレクトリをデフォルトで無視する
# 親ディレクトリが無視されると中のファイルの例外指定(!...)が効かなくなるため、
# ディレクトリではなく、その中のすべてのファイル(*)を無視するようにします。
**/.vscode/*

# 2. ただし、ワークスペース設定ファイル自体は管理する
!/*.code-workspace

# 3. 共有したいVSCodeの設定ファイルはGit管理下に含める
# `**` を使うことで、どの階層の.vscodeディレクトリにも適用できます。
!**/.vscode/settings.json
!**/.vscode/extensions.json
!**/.vscode/launch.json
!**/.vscode/tasks.json
!**/.vscode/*.code-snippets

.firebase/*

# =================================================================
# Terraform
# See https://www.terraform.io/docs/language/state/index.html
# =================================================================

# Local Terraform state files
# Contains sensitive data and is specific to a single run.
# Should be stored in a remote backend for collaboration.
*.tfstate
*.tfstate.*.backup

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used for local testing and development.
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Directory for provider plugins and modules downloaded by "terraform init".
.terraform/

# Terraform CLI configuration files
.terraformrc
terraform.rc

# Docker上に起動したFirebase Emulatorのデータ出力先
docker/firebase/data/emulator_data
